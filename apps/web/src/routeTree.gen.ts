/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ConversationImport } from './routes/_conversation'
import { Route as ConversationIndexImport } from './routes/_conversation/index'
import { Route as ConversationConversationIdImport } from './routes/_conversation/$conversationId'

// Create/Update Routes

const ConversationRoute = ConversationImport.update({
  id: '/_conversation',
  getParentRoute: () => rootRoute,
} as any)

const ConversationIndexRoute = ConversationIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ConversationRoute,
} as any)

const ConversationConversationIdRoute = ConversationConversationIdImport.update(
  {
    id: '/$conversationId',
    path: '/$conversationId',
    getParentRoute: () => ConversationRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_conversation': {
      id: '/_conversation'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ConversationImport
      parentRoute: typeof rootRoute
    }
    '/_conversation/$conversationId': {
      id: '/_conversation/$conversationId'
      path: '/$conversationId'
      fullPath: '/$conversationId'
      preLoaderRoute: typeof ConversationConversationIdImport
      parentRoute: typeof ConversationImport
    }
    '/_conversation/': {
      id: '/_conversation/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ConversationIndexImport
      parentRoute: typeof ConversationImport
    }
  }
}

// Create and export the route tree

interface ConversationRouteChildren {
  ConversationConversationIdRoute: typeof ConversationConversationIdRoute
  ConversationIndexRoute: typeof ConversationIndexRoute
}

const ConversationRouteChildren: ConversationRouteChildren = {
  ConversationConversationIdRoute: ConversationConversationIdRoute,
  ConversationIndexRoute: ConversationIndexRoute,
}

const ConversationRouteWithChildren = ConversationRoute._addFileChildren(
  ConversationRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof ConversationRouteWithChildren
  '/$conversationId': typeof ConversationConversationIdRoute
  '/': typeof ConversationIndexRoute
}

export interface FileRoutesByTo {
  '/$conversationId': typeof ConversationConversationIdRoute
  '/': typeof ConversationIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_conversation': typeof ConversationRouteWithChildren
  '/_conversation/$conversationId': typeof ConversationConversationIdRoute
  '/_conversation/': typeof ConversationIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/$conversationId' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/$conversationId' | '/'
  id:
    | '__root__'
    | '/_conversation'
    | '/_conversation/$conversationId'
    | '/_conversation/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  ConversationRoute: typeof ConversationRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  ConversationRoute: ConversationRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_conversation"
      ]
    },
    "/_conversation": {
      "filePath": "_conversation.tsx",
      "children": [
        "/_conversation/$conversationId",
        "/_conversation/"
      ]
    },
    "/_conversation/$conversationId": {
      "filePath": "_conversation/$conversationId.tsx",
      "parent": "/_conversation"
    },
    "/_conversation/": {
      "filePath": "_conversation/index.tsx",
      "parent": "/_conversation"
    }
  }
}
ROUTE_MANIFEST_END */
